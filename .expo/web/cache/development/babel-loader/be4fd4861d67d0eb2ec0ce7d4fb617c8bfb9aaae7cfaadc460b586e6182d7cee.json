{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: '',\n      error: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    modalVisible = _useState6[0],\n    setModalVisible = _useState6[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!modalVisible);\n  };\n  var onLoginPressed = function onLoginPressed() {\n    var handleLogin = function handleLogin() {\n      var response, data;\n      return _regeneratorRuntime.async(function handleLogin$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://10.0.114.185:1001/login', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                username: username.value,\n                password: password.value\n              })\n            }));\n          case 3:\n            response = _context.sent;\n            if (!response.ok) {\n              _context.next = 11;\n              break;\n            }\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n          case 7:\n            data = _context.sent;\n            navigation.reset({\n              index: 0,\n              routes: [{\n                name: 'Dashboard',\n                params: {\n                  token: data.token\n                }\n              }]\n            });\n            _context.next = 12;\n            break;\n          case 11:\n            toggleModal();\n          case 12:\n            _context.next = 18;\n            break;\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            toggleModal();\n            console.error('Error:', _context.t0);\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, [[0, 14]], Promise);\n    };\n    handleLogin();\n  };\n  return React.createElement(Background, null, React.createElement(BackButton, {\n    goBack: navigation.goBack\n  }), React.createElement(Logo, null), React.createElement(Header, null, \"Hello.\"), React.createElement(TextInput, {\n    label: \"Username\",\n    returnKeyType: \"next\",\n    value: username.value,\n    onChangeText: function onChangeText(text) {\n      return setUsername({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!username.error,\n    errorText: username.error,\n    autoCapitalize: \"none\"\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onLoginPressed\n  }, \"Log in\"), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Button, {\n    title: \"Show Modal\",\n    onPress: toggleModal\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      padding: 20\n    }\n  }, React.createElement(Text, null, \"Login fail\"), React.createElement(Button, {\n    title: \"Close\",\n    onPress: toggleModal\n  }, \"Close\"))))));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 10\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","TouchableOpacity","StyleSheet","View","Modal","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","LoginScreen","_ref","navigation","_useState","value","error","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","modalVisible","setModalVisible","toggleModal","onLoginPressed","handleLogin","response","data","_regeneratorRuntime","async","handleLogin$","_context","prev","next","awrap","fetch","method","headers","body","JSON","stringify","sent","ok","json","reset","index","routes","name","params","token","t0","console","stop","Promise","createElement","goBack","label","returnKeyType","onChangeText","text","errorText","autoCapitalize","secureTextEntry","mode","onPress","style","flex","justifyContent","alignItems","title","animationType","transparent","visible","onRequestClose","backgroundColor","padding","styles","create","forgotPassword","width","marginBottom","row","flexDirection","marginTop","forgot","fontSize","color","colors","secondary","link","fontWeight","primary"],"sources":["D:/source-personal/hoc expo/timekeeping/timekeeping/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View, Modal  } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\n\nexport default function LoginScreen({ navigation }) {\n  const [username, setUsername] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n  const [modalVisible, setModalVisible] = useState(false);\n  const toggleModal = () => {\n    setModalVisible(!modalVisible);\n  };\n\n  const onLoginPressed = () => {\n\n    const handleLogin = async () => {\n      try {\n       \n        const response = await fetch('http://10.0.114.185:1001/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ username: username.value,password: password.value }),\n        });\n  \n        if (response.ok) {\n          const data = await response.json();\n          // Handle successful login (e.g., store authentication token)\n          // For example, you might store the token in AsyncStorage\n          // AsyncStorage.setItem('authToken', token);\n           navigation.reset({\n            index: 0,\n            routes: [{ name: 'Dashboard', params: {token: data.token} }],\n          })\n        } else {\n          toggleModal();\n          // Handle login failure (e.g., incorrect credentials)\n        //  Alert.alert('Login failed', 'Invalid username or password');\n        }\n      } catch (error) {\n        toggleModal();\n        console.error('Error:', error);\n       // Alert.alert('Error', 'Something went wrong');\n      }\n    };\n    handleLogin();\n    // navigation.reset({\n    //   index: 0,\n    //   routes: [{ name: 'Dashboard' }],\n    // })\n  }\n\n\n  \n\n  return (\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Hello.</Header>\n      <TextInput\n        label=\"Username\"\n        returnKeyType=\"next\"\n        value={username.value}\n        onChangeText={(text) => setUsername({ value: text, error: '' })}\n        error={!!username.error}\n        errorText={username.error}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n\n      <Button mode=\"contained\" onPress={onLoginPressed}>\n        Log in\n      </Button>\n\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Button title=\"Show Modal\" onPress={toggleModal} />\n      <Modal\n        animationType=\"slide\" // You can change the animation type (slide, fade, none)\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0, 0, 0, 0.5)' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text>Login fail</Text>\n            <Button title=\"Close\" onPress={toggleModal} >Close</Button>\n          </View>\n        </View>\n      </Modal>\n    </View>\n    \n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 10,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAEvC,SAASC,IAAI,QAAQ,oBAAoB;AACzC,OAAOC,UAAU;AACjB,OAAOC,IAAI;AACX,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,SAAS;AAChB,OAAOC,UAAU;AACjB,SAASC,KAAK;AAEd,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9C,IAAAC,SAAA,GAAgChB,QAAQ,CAAC;MAAEiB,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA;IAA3DK,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgCvB,QAAQ,CAAC;MAAEiB,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC,CAAC;IAAAM,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA3DE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAwC3B,QAAQ,CAAC,KAAK,CAAC;IAAA4B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAhDE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,IAAMG,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAE3B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA;MAAA,IAAAC,QAAA,EAAAC,IAAA;MAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,aAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CAGUC,KAAK,CAAC,gCAAgC,EAAE;cAC7DC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBACP,cAAc,EAAE;cAClB,CAAC;cACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBAAE3B,QAAQ,EAAEA,QAAQ,CAACJ,KAAK;gBAACQ,QAAQ,EAAEA,QAAQ,CAACR;cAAM,CAAC;YAC5E,CAAC,CAAC;UAAA;YANIiB,QAAQ,GAAAK,QAAA,CAAAU,IAAA;YAAA,KAQVf,QAAQ,CAACgB,EAAE;cAAAX,QAAA,CAAAE,IAAA;cAAA;YAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OAAAL,mBAAA,CAAAM,KAAA,CACMR,QAAQ,CAACiB,IAAI,CAAC,CAAC;UAAA;YAA5BhB,IAAI,GAAAI,QAAA,CAAAU,IAAA;YAITlC,UAAU,CAACqC,KAAK,CAAC;cAChBC,KAAK,EAAE,CAAC;cACRC,MAAM,EAAE,CAAC;gBAAEC,IAAI,EAAE,WAAW;gBAAEC,MAAM,EAAE;kBAACC,KAAK,EAAEtB,IAAI,CAACsB;gBAAK;cAAE,CAAC;YAC7D,CAAC,CAAC;YAAAlB,QAAA,CAAAE,IAAA;YAAA;UAAA;YAEFV,WAAW,CAAC,CAAC;UAAC;YAAAQ,QAAA,CAAAE,IAAA;YAAA;UAAA;YAAAF,QAAA,CAAAC,IAAA;YAAAD,QAAA,CAAAmB,EAAA,GAAAnB,QAAA;YAKhBR,WAAW,CAAC,CAAC;YACb4B,OAAO,CAACzC,KAAK,CAAC,QAAQ,EAAAqB,QAAA,CAAAmB,EAAO,CAAC;UAAC;UAAA;YAAA,OAAAnB,QAAA,CAAAqB,IAAA;QAAA;MAAA,0BAAAC,OAAA;IAAA,CAGlC;IACD5B,WAAW,CAAC,CAAC;EAKf,CAAC;EAKD,OACElC,KAAA,CAAA+D,aAAA,CAACxD,UAAU,QACTP,KAAA,CAAA+D,aAAA,CAACnD,UAAU;IAACoD,MAAM,EAAEhD,UAAU,CAACgD;EAAO,CAAE,CAAC,EACzChE,KAAA,CAAA+D,aAAA,CAACvD,IAAI,MAAE,CAAC,EACRR,KAAA,CAAA+D,aAAA,CAACtD,MAAM,QAAC,QAAc,CAAC,EACvBT,KAAA,CAAA+D,aAAA,CAACpD,SAAS;IACRsD,KAAK,EAAC,UAAU;IAChBC,aAAa,EAAC,MAAM;IACpBhD,KAAK,EAAEI,QAAQ,CAACJ,KAAM;IACtBiD,YAAY,EAAE,SAAAA,aAACC,IAAI;MAAA,OAAK7C,WAAW,CAAC;QAAEL,KAAK,EAAEkD,IAAI;QAAEjD,KAAK,EAAE;MAAG,CAAC,CAAC;IAAA,CAAC;IAChEA,KAAK,EAAE,CAAC,CAACG,QAAQ,CAACH,KAAM;IACxBkD,SAAS,EAAE/C,QAAQ,CAACH,KAAM;IAC1BmD,cAAc,EAAC;EAAM,CACtB,CAAC,EACFtE,KAAA,CAAA+D,aAAA,CAACpD,SAAS;IACRsD,KAAK,EAAC,UAAU;IAChBC,aAAa,EAAC,MAAM;IACpBhD,KAAK,EAAEQ,QAAQ,CAACR,KAAM;IACtBiD,YAAY,EAAE,SAAAA,aAACC,IAAI;MAAA,OAAKzC,WAAW,CAAC;QAAET,KAAK,EAAEkD,IAAI;QAAEjD,KAAK,EAAE;MAAG,CAAC,CAAC;IAAA,CAAC;IAChEA,KAAK,EAAE,CAAC,CAACO,QAAQ,CAACP,KAAM;IACxBkD,SAAS,EAAE3C,QAAQ,CAACP,KAAM;IAC1BoD,eAAe;EAAA,CAChB,CAAC,EAEFvE,KAAA,CAAA+D,aAAA,CAACrD,MAAM;IAAC8D,IAAI,EAAC,WAAW;IAACC,OAAO,EAAExC;EAAe,GAAC,QAE1C,CAAC,EAETjC,KAAA,CAAA+D,aAAA,CAAC3D,IAAI;IAACsE,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS;EAAE,GACzE7E,KAAA,CAAA+D,aAAA,CAACrD,MAAM;IAACoE,KAAK,EAAC,YAAY;IAACL,OAAO,EAAEzC;EAAY,CAAE,CAAC,EACnDhC,KAAA,CAAA+D,aAAA,CAAC1D,KAAK;IACJ0E,aAAa,EAAC,OAAO;IACrBC,WAAW,EAAE,IAAK;IAClBC,OAAO,EAAEnD,YAAa;IACtBoD,cAAc,EAAE,SAAAA,eAAA,EAAM;MACpBnD,eAAe,CAAC,CAACD,YAAY,CAAC;IAChC;EAAE,GAEF9B,KAAA,CAAA+D,aAAA,CAAC3D,IAAI;IAACsE,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE,QAAQ;MAAEM,eAAe,EAAE;IAAqB;EAAE,GAC9GnF,KAAA,CAAA+D,aAAA,CAAC3D,IAAI;IAACsE,KAAK,EAAE;MAAES,eAAe,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAG;EAAE,GACrDpF,KAAA,CAAA+D,aAAA,CAACzD,IAAI,QAAC,YAAgB,CAAC,EACvBN,KAAA,CAAA+D,aAAA,CAACrD,MAAM;IAACoE,KAAK,EAAC,OAAO;IAACL,OAAO,EAAEzC;EAAY,GAAE,OAAa,CACtD,CACF,CACD,CACH,CAEM,CAAC;AAEjB;AAEA,IAAMqD,MAAM,GAAGlF,UAAU,CAACmF,MAAM,CAAC;EAC/BC,cAAc,EAAE;IACdC,KAAK,EAAE,MAAM;IACbX,UAAU,EAAE,UAAU;IACtBY,YAAY,EAAE;EAChB,CAAC;EACDC,GAAG,EAAE;IACHC,aAAa,EAAE,KAAK;IACpBC,SAAS,EAAE;EACb,CAAC;EACDC,MAAM,EAAE;IACNC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAElF,KAAK,CAACmF,MAAM,CAACC;EACtB,CAAC;EACDC,IAAI,EAAE;IACJC,UAAU,EAAE,MAAM;IAClBJ,KAAK,EAAElF,KAAK,CAACmF,MAAM,CAACI;EACtB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}