{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport Background from \"../components/Background\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Paragraph from \"../components/Paragraph\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { useRoute } from '@react-navigation/native';\nimport { theme } from \"../core/theme\";\nexport default function Dashboard(_ref) {\n  var _route$params,\n    _route$params2,\n    _this = this;\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!modalVisible);\n  };\n  var route = useRoute();\n  var token = (_route$params = route.params) == null ? void 0 : _route$params.token;\n  var username = (_route$params2 = route.params) == null ? void 0 : _route$params2.username;\n  var onCheckPressed = function onCheckPressed() {\n    var handleCheck = function handleCheck() {\n      var response, data;\n      return _regeneratorRuntime.async(function handleCheck$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('http://10.0.114.185:1001/check', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                type: typecheck,\n                token: _this.token\n              })\n            }));\n          case 3:\n            response = _context.sent;\n            if (!response.ok) {\n              _context.next = 11;\n              break;\n            }\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(response.json());\n          case 7:\n            data = _context.sent;\n            alert('thanh cong');\n            _context.next = 12;\n            break;\n          case 11:\n            toggleModal();\n          case 12:\n            _context.next = 18;\n            break;\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](0);\n            toggleModal();\n            console.error('Error:', _context.t0);\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }, null, null, [[0, 14]], Promise);\n    };\n    handleCheck(typecheck);\n  };\n  return React.createElement(Background, null, React.createElement(Logo, null), React.createElement(Header, null, \"Welcome \\uD83D\\uDCAB\"), React.createElement(Paragraph, null, \"Congratulations you are logged in.\"), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onCheckPressed('i')\n  }, \"Check In\"), React.createElement(Button, {\n    mode: \"contained\"\n  }, \"Check Out\"), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Button, {\n    title: \"Show Modal\",\n    onPress: toggleModal\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      padding: 20\n    }\n  }, React.createElement(Text, null, \"Login fail\"), React.createElement(Button, {\n    title: \"Close\",\n    onPress: toggleModal\n  }, \"Close\"))))));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 10\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","Background","TouchableOpacity","StyleSheet","View","Modal","Logo","Header","Paragraph","Button","TextInput","BackButton","useRoute","theme","Dashboard","_ref","_route$params","_route$params2","_this","navigation","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","toggleModal","route","token","params","username","onCheckPressed","handleCheck","response","data","_regeneratorRuntime","async","handleCheck$","_context","prev","next","awrap","fetch","method","headers","body","JSON","stringify","type","typecheck","sent","ok","json","alert","t0","console","error","stop","Promise","createElement","mode","onPress","style","flex","justifyContent","alignItems","title","animationType","transparent","visible","onRequestClose","backgroundColor","padding","Text","styles","create","forgotPassword","width","marginBottom","row","flexDirection","marginTop","forgot","fontSize","color","colors","secondary","link","fontWeight","primary"],"sources":["D:/source-personal/hoc expo/timekeeping/timekeeping/src/screens/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Background from '../components/Background'\nimport { TouchableOpacity, StyleSheet, View, Modal  } from 'react-native'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Paragraph from '../components/Paragraph'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { useRoute } from '@react-navigation/native'\nimport { theme } from '../core/theme'\n\nexport default function Dashboard({ navigation }) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const toggleModal = () => {\n    setModalVisible(!modalVisible);\n  };\n  const route = useRoute();\n  const token = route.params?.token;\n  const username = route.params?.username;\n  const onCheckPressed = () => {\n\n    const handleCheck = async () => {\n      try {\n       \n        const response = await fetch('http://10.0.114.185:1001/check', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ type: typecheck, token: this.token }),\n        });\n  \n        if (response.ok) {\n          const data = await response.json();\n          // Handle successful login (e.g., store authentication token)\n          // For example, you might store the token in AsyncStorage\n          // AsyncStorage.setItem('authToken', token);\n          alert('thanh cong');\n        } else {\n          toggleModal();\n          // Handle login failure (e.g., incorrect credentials)\n        //  Alert.alert('Login failed', 'Invalid username or password');\n        }\n      } catch (error) {\n        toggleModal();\n        console.error('Error:', error);\n       // Alert.alert('Error', 'Something went wrong');\n      }\n    };\n    handleCheck(typecheck);\n\n  }\n  return (\n    <Background>\n      <Logo />\n      <Header>Welcome ðŸ’«</Header>\n      <Paragraph>\n        Congratulations you are logged in.\n      </Paragraph>\n\n      <Button mode=\"contained\" onPress={onCheckPressed('i')}>\n        Check In\n      </Button>\n      <Button mode=\"contained\">\n        Check Out\n      </Button>\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Button title=\"Show Modal\" onPress={toggleModal} />\n      <Modal\n        animationType=\"slide\" // You can change the animation type (slide, fade, none)\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0, 0, 0, 0.5)' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text>Login fail</Text>\n            <Button title=\"Close\" onPress={toggleModal} >Close</Button>\n          </View>\n        </View>\n      </Modal>\n    </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 10,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}