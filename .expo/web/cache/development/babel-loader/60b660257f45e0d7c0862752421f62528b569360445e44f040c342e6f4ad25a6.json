{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Background from \"../components/Background\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Paragraph from \"../components/Paragraph\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { useRoute } from '@react-navigation/native';\nimport { theme } from \"../core/theme\";\nexport default function Dashboard(_ref) {\n  var _route$params, _route$params2;\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var toggleModal = function toggleModal() {\n    setModalVisible(!modalVisible);\n  };\n  var route = useRoute();\n  var token = (_route$params = route.params) == null ? void 0 : _route$params.token;\n  var username = (_route$params2 = route.params) == null ? void 0 : _route$params2.username;\n  var onCheckPressed = function onCheckPressed() {\n    alert(0);\n  };\n  return React.createElement(Background, null, React.createElement(Logo, null), React.createElement(Header, null, \"Welcome \\uD83D\\uDCAB\"), React.createElement(Paragraph, null, \"Congratulations you are logged in.\"), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onCheckPressed()\n  }, \"Check In\"), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onCheckPressed()\n  }, \"Check Out\"), React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Button, {\n    title: \"Show Modal\",\n    onPress: toggleModal\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(!modalVisible);\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)'\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'white',\n      padding: 20\n    }\n  }, React.createElement(Text, null, \"Login fail\"), React.createElement(Button, {\n    title: \"Close\",\n    onPress: toggleModal\n  }, \"Close\"))))));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 10\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","Background","TouchableOpacity","StyleSheet","View","Modal","Logo","Header","Paragraph","Button","TextInput","BackButton","useRoute","theme","Dashboard","_ref","_route$params","_route$params2","navigation","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","toggleModal","route","token","params","username","onCheckPressed","alert","createElement","mode","onPress","style","flex","justifyContent","alignItems","title","animationType","transparent","visible","onRequestClose","backgroundColor","padding","Text","styles","create","forgotPassword","width","marginBottom","row","flexDirection","marginTop","forgot","fontSize","color","colors","secondary","link","fontWeight","primary"],"sources":["D:/source-personal/hoc expo/timekeeping/timekeeping/src/screens/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react'\nimport Background from '../components/Background'\nimport { TouchableOpacity, StyleSheet, View, Modal  } from 'react-native'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Paragraph from '../components/Paragraph'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { useRoute } from '@react-navigation/native'\nimport { theme } from '../core/theme'\n\nexport default function Dashboard({ navigation }) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const toggleModal = () => {\n    setModalVisible(!modalVisible);\n  };\n  const route = useRoute();\n  const token = route.params?.token;\n  const username = route.params?.username;\n  const onCheckPressed = () => {\n\n      alert(0);\n\n  }\n  return (\n    <Background>\n      <Logo />\n      <Header>Welcome ðŸ’«</Header>\n      <Paragraph>\n        Congratulations you are logged in.\n      </Paragraph>\n\n      <Button mode=\"contained\" onPress={onCheckPressed()}>\n        Check In\n      </Button>\n      <Button mode=\"contained\" onPress={onCheckPressed()}>\n        Check Out\n      </Button>\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Button title=\"Show Modal\" onPress={toggleModal} />\n      <Modal\n        animationType=\"slide\" // You can change the animation type (slide, fade, none)\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'rgba(0, 0, 0, 0.5)' }}>\n          <View style={{ backgroundColor: 'white', padding: 20 }}>\n            <Text>Login fail</Text>\n            <Button title=\"Close\" onPress={toggleModal} >Close</Button>\n          </View>\n        </View>\n      </Modal>\n    </View>\n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 10,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}