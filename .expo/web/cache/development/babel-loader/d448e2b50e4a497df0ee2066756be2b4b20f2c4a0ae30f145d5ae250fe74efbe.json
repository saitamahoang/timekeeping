{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport { passwordValidator } from \"../helpers/passwordValidator\";\nexport default function LoginScreen(_ref) {\n  var _this = this;\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: '',\n      error: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState({\n      value: '',\n      error: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var onLoginPressed = function onLoginPressed() {\n    alert(username.value);\n    _this.handleLogin();\n  };\n  var handleLogin = function handleLogin() {\n    var response;\n    return _regeneratorRuntime.async(function handleLogin$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:8080/login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              username: username,\n              password: password\n            })\n          }));\n        case 3:\n          response = _context.sent;\n          if (response.ok) {\n            Alert.alert('Login successful');\n          } else {\n            Alert.alert('Login failed', 'Invalid username or password');\n          }\n          _context.next = 11;\n          break;\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          console.error('Error:', _context.t0);\n          Alert.alert('Error', 'Something went wrong');\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n  return React.createElement(Background, null, React.createElement(BackButton, {\n    goBack: navigation.goBack\n  }), React.createElement(Logo, null), React.createElement(Header, null, \"Hello.\"), React.createElement(TextInput, {\n    label: \"Username\",\n    returnKeyType: \"next\",\n    value: username.value,\n    onChangeText: function onChangeText(text) {\n      return setUsername({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!username.error,\n    errorText: username.error,\n    autoCapitalize: \"none\"\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onLoginPressed\n  }, \"Log in\"));\n}\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 10\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"names":["React","useState","TouchableOpacity","StyleSheet","View","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","passwordValidator","LoginScreen","_ref","_this","navigation","_useState","value","error","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","onLoginPressed","alert","handleLogin","response","_regeneratorRuntime","async","handleLogin$","_context","prev","next","awrap","fetch","method","headers","body","JSON","stringify","sent","ok","Alert","t0","console","stop","Promise","createElement","goBack","label","returnKeyType","onChangeText","text","errorText","autoCapitalize","secureTextEntry","mode","onPress","styles","create","forgotPassword","width","alignItems","marginBottom","row","flexDirection","marginTop","forgot","fontSize","color","colors","secondary","link","fontWeight","primary"],"sources":["D:/source-personal/hoc expo/timekeeping/timekeeping/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport { passwordValidator } from '../helpers/passwordValidator'\n\nexport default function LoginScreen({ navigation }) {\n  const [username, setUsername] = useState({ value: '', error: '' })\n  const [password, setPassword] = useState({ value: '', error: '' })\n\n  const onLoginPressed = () => {\n  alert(username.value);\n\n    this.handleLogin();\n    // navigation.reset({\n    //   index: 0,\n    //   routes: [{ name: 'Dashboard' }],\n    // })\n  }\n\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n\n      if (response.ok) {\n        // Handle successful login (e.g., store authentication token)\n        // For example, you might store the token in AsyncStorage\n        // AsyncStorage.setItem('authToken', token);\n        Alert.alert('Login successful');\n      } else {\n        // Handle login failure (e.g., incorrect credentials)\n        Alert.alert('Login failed', 'Invalid username or password');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      Alert.alert('Error', 'Something went wrong');\n    }\n  };\n\n  return (\n    <Background>\n      <BackButton goBack={navigation.goBack} />\n      <Logo />\n      <Header>Hello.</Header>\n      <TextInput\n        label=\"Username\"\n        returnKeyType=\"next\"\n        value={username.value}\n        onChangeText={(text) => setUsername({ value: text, error: '' })}\n        error={!!username.error}\n        errorText={username.error}\n        autoCapitalize=\"none\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={(text) => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n\n      <Button mode=\"contained\" onPress={onLoginPressed}>\n        Log in\n      </Button>\n    \n    </Background>\n  )\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 10,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}